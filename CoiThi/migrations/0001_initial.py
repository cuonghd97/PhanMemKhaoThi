# Generated by Django 2.1.2 on 2018-12-21 09:53

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ChamThi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ngayCham', models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                'managed': True,
                'db_table': 'cham_thi',
            },
        ),
        migrations.CreateModel(
            name='ChiTietKhoa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': True,
                'db_table': 'chi_tiet_khoa',
            },
        ),
        migrations.CreateModel(
            name='ChiTietLop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diem', models.IntegerField(default=0)),
                ('trangThai', models.TextField(max_length=200, null=True)),
                ('lyDo', models.TextField(max_length=200, null=True)),
                ('ghiChu', models.TextField(max_length=200, null=True)),
            ],
            options={
                'managed': True,
                'db_table': 'chi_tiet_lop',
            },
        ),
        migrations.CreateModel(
            name='DonVi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenDonVi', models.TextField(max_length=200, null=True)),
                ('maDonVi', models.CharField(max_length=100, null=True)),
            ],
            options={
                'managed': True,
                'db_table': 'don_vi',
            },
        ),
        migrations.CreateModel(
            name='KhoaHoc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenKhoaHoc', models.TextField(max_length=200, null=True)),
                ('maKhoaHoc', models.CharField(max_length=100, null=True)),
                ('he', models.TextField(max_length=200, null=True)),
            ],
            options={
                'managed': True,
                'db_table': 'khoa_hoc',
            },
        ),
        migrations.CreateModel(
            name='KyThi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maKyThi', models.CharField(max_length=100, null=True)),
                ('tenKyThi', models.TextField(max_length=200, null=True)),
                ('ngayBatDau', models.DateField(default=django.utils.timezone.now)),
                ('ngayKetThuc', models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                'managed': True,
                'db_table': 'ky_thi',
            },
        ),
        migrations.CreateModel(
            name='LopHoc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maLop', models.CharField(max_length=100, null=True)),
                ('tenLop', models.TextField(max_length=200, null=True)),
                ('maKhoa', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='CoiThi.KhoaHoc')),
            ],
            options={
                'managed': True,
                'db_table': 'lop_hoc',
            },
        ),
        migrations.CreateModel(
            name='Mon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maMon', models.CharField(max_length=20, null=True, unique=True)),
                ('tenMon', models.TextField(max_length=200, null=True)),
            ],
            options={
                'managed': True,
                'db_table': 'mon',
            },
        ),
        migrations.CreateModel(
            name='PhongThi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maPhong', models.CharField(max_length=100, null=True)),
                ('viTri', models.CharField(max_length=100, null=True)),
                ('ngayThi', models.DateField(default=django.utils.timezone.now)),
                ('gio', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'managed': True,
                'db_table': 'phong_thi',
            },
        ),
        migrations.CreateModel(
            name='SinhVien',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maSinhVien', models.CharField(max_length=100, null=True)),
                ('tenSinhVien', models.TextField(max_length=200, null=True)),
                ('tuoi', models.IntegerField(default=0)),
                ('maDonVi', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='CoiThi.DonVi')),
            ],
            options={
                'managed': True,
                'db_table': 'sinh_vien',
            },
        ),
        migrations.CreateModel(
            name='CanBo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tenCanBo', models.TextField(max_length=200, null=True)),
                ('maCanBo', models.CharField(max_length=100, null=True)),
                ('quanHam', models.TextField(max_length=200, null=True)),
                ('position', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('maDonVi', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='CoiThi.DonVi')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'managed': True,
                'db_table': 'can_bo',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='phongthi',
            name='canBoCoi1',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='canBoCoi1', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='phongthi',
            name='canBoCoi2',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='canBoCoi2', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='phongthi',
            name='maKyThi',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='CoiThi.KyThi'),
        ),
        migrations.AddField(
            model_name='phongthi',
            name='maLop',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='CoiThi.ChiTietLop'),
        ),
        migrations.AddField(
            model_name='lophoc',
            name='maMon',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='CoiThi.Mon'),
        ),
        migrations.AddField(
            model_name='chitietlop',
            name='maLop',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='CoiThi.LopHoc'),
        ),
        migrations.AddField(
            model_name='chitietlop',
            name='maSinhVien',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='CoiThi.SinhVien'),
        ),
        migrations.AddField(
            model_name='chitietkhoa',
            name='maKhoa',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='CoiThi.KhoaHoc'),
        ),
        migrations.AddField(
            model_name='chitietkhoa',
            name='maLop',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='CoiThi.LopHoc'),
        ),
        migrations.AddField(
            model_name='chamthi',
            name='canBoCham1',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='canBoCham1', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='chamthi',
            name='canBoCham2',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='canBoCham2', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='chamthi',
            name='maPhong',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='CoiThi.PhongThi'),
        ),
    ]
